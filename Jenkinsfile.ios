@Library('conservify') _

conservifyProperties([ disableConcurrentBuilds() ])

timestamps {
    node ("osx") {
        try {
            stage ('git') {
                checkout scm
            }

            stage ("configuration") {
                withCredentials([file(credentialsId: 'app-ios-google-services', variable: 'APP_IOS_GOOGLE_SERVICES')]) {
                    sh "cp -f $APP_IOS_GOOGLE_SERVICES app/App_Resources/iOS"
				}
                withCredentials([file(credentialsId: 'nativescript-sqlite-commercial', variable: 'APP_NATIVESCRIPT_SQLITE')]) {
                    sh "cp -f $APP_NATIVESCRIPT_SQLITE ."
                    sh "unzip -o $APP_NATIVESCRIPT_SQLITE"
				}
            }

            stage ('build') {
                withCredentials([string(credentialsId: 'app-ios-keychain-password', variable: 'APP_IOS_KEYCHAIN_PASSWORD')]) {
                  sh """
export PATH=$PATH:$HOME/tools/node/bin:node_modules/.bin
set +x
export APP_IOS_KEYCHAIN_PASSWORD=${APP_IOS_KEYCHAIN_PASSWORD}
export LANG=en_US.UTF-8
set -x
env

make clean-secrets
make ios-release
"""
              }
            }

            stage ('archive') {
                archiveArtifacts artifacts: 'platforms/ios/build/Debug-iphoneos/*.ipa, platforms/ios/build/Release-iphoneos/*.ipa'
            }

            notifySuccess()
        }
        catch (Exception e) {
            notifyFailure()
            throw e;
        }
    }

    refreshDistribution()
}
